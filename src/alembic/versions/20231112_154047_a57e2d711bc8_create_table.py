"""Create table

Revision ID: a57e2d711bc8
Revises: 
Create Date: 2023-11-12 15:40:47.613520

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a57e2d711bc8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('division',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('weight', sa.BigInteger(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['division.id'], name=op.f('fk_division_parent_id_division')),
    sa.PrimaryKeyConstraint('id', 'parent_id', name=op.f('pk_division')),
    sa.UniqueConstraint('id', name=op.f('uq_division_id')),
    sa.UniqueConstraint('name', name=op.f('uq_division_name')),
    sa.UniqueConstraint('parent_id', name=op.f('uq_division_parent_id'))
    )
    op.create_table('group',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('weight', sa.BigInteger(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['group.id'], name=op.f('fk_group_parent_id_group')),
    sa.PrimaryKeyConstraint('id', 'parent_id', name=op.f('pk_group')),
    sa.UniqueConstraint('id', name=op.f('uq_group_id')),
    sa.UniqueConstraint('name', name=op.f('uq_group_name')),
    sa.UniqueConstraint('parent_id', name=op.f('uq_group_parent_id'))
    )
    op.create_table('role',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('weight', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('id', name=op.f('uq_role_id')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('keycloak_id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('full_name', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('phone', sa.String(length=256), nullable=True),
    sa.Column('telegram_id', sa.String(length=256), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('division_id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('group_id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('role_id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.ForeignKeyConstraint(['division_id'], ['division.id'], name=op.f('fk_user_division_id_division')),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_user_group_id_group')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_id_role')),
    sa.PrimaryKeyConstraint('id', 'division_id', 'group_id', 'role_id', name=op.f('pk_user')),
    sa.UniqueConstraint('division_id', name=op.f('uq_user_division_id')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('group_id', name=op.f('uq_user_group_id')),
    sa.UniqueConstraint('id', name=op.f('uq_user_id')),
    sa.UniqueConstraint('keycloak_id', name=op.f('uq_user_keycloak_id')),
    sa.UniqueConstraint('phone', name=op.f('uq_user_phone')),
    sa.UniqueConstraint('role_id', name=op.f('uq_user_role_id')),
    sa.UniqueConstraint('telegram_id', name=op.f('uq_user_telegram_id')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('group')
    op.drop_table('division')
    # ### end Alembic commands ###
