[project]
name = ""
version = "0.0.1"
description = ""
authors = [
    {name = "Srg", email = "bocxod500@gmail.com"},
    {name = "Che", email = "m.villian@gmail.com"},
]
dependencies = [
    "fastapi>=0.104.0",
    "pydantic>=2.4.2",
    "SQLAlchemy>=2.0.28",
    "python-dotenv>=1.0.1",
    "uvicorn>=0.23.2",
    "pyjwt>=2.8.0",
    "cryptography>=41.0.4",
    "redis>=5.0.1",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "pydantic-settings>=2.0.3",
    "uvloop>=0.18.0; sys_platform != 'win32'",
    "mypy>=1.6.1",
    "greenlet>=3.0.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib>=1.7.4",
    "types-passlib>=1.7.7.20240106",
    "bcrypt>=4.1.2",
    "black>=24.2.0",
    "isort>=5.13.2",
]
requires-python = ">=3.11"
readme = "README.md"

[tool.pdm.dev-dependencies]
dev = [
    "black>=23.9.1",
    "ruff>=0.0.290",
    "mypy>=1.5.1",
    "pytest>=7.4.2",
    "coverage>=7.3.1",
    "pytest-archon>=0.0.5",
    "sqlalchemy-pytest>=0.2.1",
    "factory-boy>=3.3.0",
    "deptry>=0.12.0",
    "asgi-lifespan>=2.1.0",
    "pytest-xdist>=3.3.1",
    "isort>=5.12.0",
]

[tool.deptry]

[tool.deptry.per_rule_ignores]
DEP001 = ["uvicorn", "uvloop", "cryptography", "asyncpg"]
DEP002 = ["starlette"]

[tool.pytest.ini_options]
pythonpath = "src"

[tool.coverage.run]
source = ["src"]
omit = [
    "src/alembic/*",
    "tests/",
]

command_line = "-m pytest -vv"
concurrency = ["greenlet", "thread"]


[tool.coverage.report]
omit = [
    "tests/",
    "src/alembic/*",
]
exclude_lines = [
    "pragma: no cover",
    "raise *",
    "if TYPE_CHECKING:",
    "assert_never*",
    # Match stubs
    "^\\s*\\.\\.\\.$",
]

show_missing = true
skip_covered = true
skip_empty = true
precision = 2
fail_under = 0

[tool.mypy]
python_version = "3.11"
plugins = [
    "pydantic.mypy",
]

follow_imports = "normal"
ignore_missing_imports = true
exclude = ["venv"]
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

strict_optional = true
strict_equality = true

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py311"
src = ["src", "tests"]
select = ["ALL"]
fixable = [
    "F",
    "E",
    "W",
    "I",
    "COM",
    "UP",
    "RUF",
]
ignore = [
    "UP017", # Use `datetime.UTC` alias, This clashes with imported `datetime` class
    "E501", # Line Length
    "A003", # Class attribute ... is shadowing a python builtin
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "D", # pydocstyle
    "PD", # pandas-vet
    "INP",
    "TCH001", # Move import into type-checking block
    "TCH002", # Move third-party import into a type-checking block
    "TCH003", # Found multiple type checking blocks
    "RUF001",
    "RUF002",
    "RUF003",
    "EXE002",
    "TD003",
    "FIX002",
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S311"]
"tests/*/test_*.py" = ["PLR0913"]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.mccabe]
max-complexity = 6


[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator", "pydantic.model_validator"]
staticmethod-decorators = ["staticmethod"]

[tool.pdm.scripts]
app = "python -m main"


lint = { composite = [
    "ruff check . --fix --show-fixes",
    "black .",
    "ruff check . --fix --show-fixes",
    "mypy .",
    "alembic check",
] }
test = { composite = [
    "coverage run",
    "coverage report",
] }
